on:
  push

name: Test and Build

jobs:
  test:
    name: Test changes
    runs-on: ubuntu-latest
    environment: Staging
    env:
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      DEBUG: ${{secrets.DEBUG}}
      CORS_ALLOWED_ORIGINS: ${{secrets.CORS_ALLOWED_ORIGINS}}
      CSRF_TRUSTED_ORIGINS: ${{secrets.CSRF_TRUSTED_ORIGINS}}
      DB_ENGINE: ${{secrets.DB_ENGINE}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_PORT: ${{secrets.DB_PORT}}
      DB_USER: ${{secrets.DB_USER}}
      CACHE_BACKEND: ${{secrets.CACHE_BACKEND}}
      CACHE_LOCATION: ${{secrets.CACHE_LOCATION}}
      CACHE_OPTIONS_CLIENT: ${{secrets.CACHE_OPTIONS_CLIENT}}
      CELERY_BROKER_URL: ${{secrets.CELERY_BROKER_URL}}
      CELERY_RESULT_BACKEND: ${{secrets.CELERY_RESULT_BACKEND}}
      ALLOWED_HOSTS: ${{secrets.ALLOWED_HOSTS}}
    steps:
      - name: Set up Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check env variables
        run: |
          echo ${{secrets.DB_NAME}}
          echo ${{secrets.DEBUG}}
      - name: Build Containers
        run: docker-compose -f docker-compose.staging.yml up -d
      - name: Test
        run: python manage.py test

  build:
    name: Build and push to docker hub
    runs-on: ubuntu-latest
    environment: Staging
    needs: test
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: achan9528/lot-divider-api:${{ github.sha }}
        - name: Image digest
          run: echo ${{ steps.docker_build.outputs.digest }}